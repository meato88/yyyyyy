import asyncio
from telegram import Bot, InputFile, Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
    ConversationHandler,
)
from telegram.constants import ParseMode

TOKEN = "7644650564:AAHPtYEgWEnEekmlHK6_DHtI8_zfY0Qg7KQ"
bot = Bot(token=TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
CHOOSING_ROLE, GET_PHONE = range(2)

# –ú–µ–Ω—é –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
seller_menu = ReplyKeyboardMarkup(
    [
        ["‚úÖ –ß–µ–∫-–ª–∏—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞","üéß –ê—É–¥–∏–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"],
        ["üé• –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Ä–∞–±–æ—Ç–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"],
        ["üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –≤ —Å–µ—Ä–≤–∏—Å–µ"]
    ],
    resize_keyboard=True
)

driver_menu = ReplyKeyboardMarkup(
    [
        ["üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è"],
        ["üìÑ –¢–∞—Ä–∏—Ñ—ã –∑–∞ –ø–æ–µ–∑–¥–∫–∏"],
    ],
    resize_keyboard=True
)

# –¢–µ–∫—Å—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π
SELLER_TEXT = [
    """<b>‚ú® –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º inTrips ‚ú®</b>

üå¥ <i>–í —Å–≤—è–∑–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ —Ä–∞–±–æ—Ç—É –ø–ª—è–∂–µ–π –ø–æ –≥. –ê–Ω–∞–ø–∞ –∏ –ê–Ω–∞–ø—Å–∫–æ–º—É —Ä–∞–π–æ–Ω—É, –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂ –Ω–∞ –ø–ª—è–∂–∞—Ö.</i>

üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É inTrips!</b>
–≠—Ç–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–∫–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
- –í–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥
- –ü–æ–º–æ–≥–∞—Ç—å –≤ –≤—ã–±–æ—Ä–µ —ç–∫—Å–∫—É—Ä—Å–∏–π
- –°–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏
- –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ""",

"""<b>1. –ì–¥–µ –∏—Å–∫–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</b>

<b>1.1 –û–Ω–ª–∞–π–Ω-–∏—Å—Ç–æ—á–Ω–∏–∫–∏</b> üåê
- –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏: –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, Instagram, –û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏
- –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥—Ä—É–ø–ø—ã –∏ —Ñ–æ—Ä—É–º—ã
- –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã: WhatsApp, Telegram
- –¢–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞
- –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ —Å–∞–π—Ç—ã –∏ –±–ª–æ–≥–∏
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:
  <i>–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:</i>
  "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–∏–ø –æ—Ç–¥—ã—Ö–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –∞–∫—Ç–∏–≤–Ω—ã–π, —Å–µ–º–µ–π–Ω—ã–π, –º–æ—Ä—Å–∫–æ–π?""",

        """<b>1.2 –û—Ñ–ª–∞–π–Ω-–∏—Å—Ç–æ—á–Ω–∏–∫–∏</b> üè¢
- –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã
- –°—Ç–æ–π–∫–∏ —Å –±–∏–ª–µ—Ç–∞–º–∏
- –û—Ç–µ–ª–∏/—Ö–æ—Å—Ç–µ–ª—ã (—Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤)""",

        """<b>2. –≠—Ç–∞–ø—ã –æ–±—â–µ–Ω–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º</b>

<b>2.1 –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞</b> ü§ù
<i>–ü—Ä–∏–º–µ—Ä:</i>
"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç [–ò–º—è], —è –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏ inTrips."

<b>2.2 –í—ã—è–≤–ª–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π</b> ‚ùì
–í–æ–ø—Ä–æ—Å—ã:
- –ö–∞–∫–∏–µ —É –≤–∞—Å –ø–ª–∞–Ω—ã?
- –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ —Å —Å–µ–º—å–µ–π?
- –ö–∞–∫–∏–µ –≤–∏–¥—ã —ç–∫—Å–∫—É—Ä—Å–∏–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç?""",

        """<b>3. –ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏</b>

<b>3.1 –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è —ç–∫—Å–∫—É—Ä—Å–∏–∏</b> üéØ
–ú–µ—Ç–æ–¥ FAB:
- –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ ‚Üí –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ ‚Üí –ü–æ–ª—å–∑–∞
<i>–ü—Ä–∏–º–µ—Ä:</i>
"–≠—Ç–æ—Ç —Ç—É—Ä –≤–∫–ª—é—á–∞–µ—Ç –ø–æ—Å–µ—â–µ–Ω–∏–µ –ö–∏–ø–∞—Ä–∏—Å–æ–≤–æ–≥–æ –æ–∑–µ—Ä–∞. –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ.""",

        """<b>4. –†–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏</b> üôå
<i>–í–æ–∑—Ä–∞–∂–µ–Ω–∏–µ:</i> "–¶–µ–Ω–∞ —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∞—è"
<i>–û—Ç–≤–µ—Ç:</i> "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ª—É—á—à–∏–π –±–∞–ª–∞–Ω—Å —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞"

<b>5. –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</b> üìù
1. –í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–∫—É—Ä—Å–∏—é ‚Üí –¥–∞—Ç—É ‚Üí –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫
2. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ QR-–∫–æ–¥ –±–æ—Ç–∞ @intrips_bot""",

        """<b>6. –ò—Ç–æ–≥–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</b> üëâ
- –ë—ã—Å—Ç—Ä–æ —Ä–µ–∞–≥–∏—Ä—É–π—Ç–µ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥
- –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º

<i>–ö–∞–∂–¥—ã–π –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–π –æ–ø—ã—Ç!</i>

¬© inTrips, 2025. –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
–û–±–Ω–æ–≤–ª–µ–Ω–æ: 20.04.2025"""
]

DRIVER_TEXT = [
    """<b>üöï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π inTrips ‚ú®</b>

üåç <i>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π!</i>

–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:
- –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
- –°–æ–±–ª—é–¥–∞–π—Ç–µ –≥—Ä–∞—Ñ–∏–∫ –ø–æ–¥–∞—á–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —á–∏—Å—Ç–æ—Ç—É –≤ —Å–∞–ª–æ–Ω–µ""",

    """<b>1. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è</b>

    üîß –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:
    - –£—Ä–æ–≤–µ–Ω—å –º–∞—Å–ª–∞ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∂–∏–¥–∫–æ—Å—Ç–µ–π
    - –î–∞–≤–ª–µ–Ω–∏–µ –≤ —à–∏–Ω–∞—Ö
    - –†–∞–±–æ—Ç–∞ —Ç–æ—Ä–º–æ–∑–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    - –ù–∞–ª–∏—á–∏–µ –∞–ø—Ç–µ—á–∫–∏ –∏ –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª—è""",
    """<b>2. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏</b>

ü§ù –ü—Ä–∞–≤–∏–ª–∞ –æ–±—â–µ–Ω–∏—è:
- –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π—Ç–µ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –ø—Ä–∏ –ø–æ—Å–∞–¥–∫–µ
- –ü–æ–º–æ–≥–∞–π—Ç–µ —Å –±–∞–≥–∞–∂–æ–º
- –°–æ–±–ª—é–¥–∞–π—Ç–µ –º–∞—Ä—à—Ä—É—Ç –ø–æ–µ–∑–¥–∫–∏
- –û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –≤–µ–∂–ª–∏–≤–æ""",
    """<b>3. –¢–∞—Ä–∏—Ñ—ã –∏ –æ–ø–ª–∞—Ç–∞</b>

üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏:
- –£–∫–∞–∑–∞–Ω—ã –≤ —Ç–∞—Ä–∏—Ñ–∞—Ö

¬© inTrips, 2025. –î–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."""
]

def save_to_file(user_data: dict, phone: str):
    with open("users_data.txt", "a", encoding="utf-8") as f:
        f.write(
            f"ID: {user_data['user_id']}, "
            f"–ò–º—è: {user_data['first_name']}, "
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}, "
            f"–†–æ–ª—å: {user_data['role']}\n"
        )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    context.user_data.update({
        'user_id': user.id,
        'first_name': user.first_name,
        'role': None
    })

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–∞ –æ–±—É—á–∞—é—â–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∫–æ–º–ø–∞–Ω–∏–∏ inTrips!\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:",
        reply_markup=ReplyKeyboardMarkup(
            [["üöï –í–æ–¥–∏—Ç–µ–ª—å", "üëî –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º"]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    return CHOOSING_ROLE

async def choose_role(update: Update, context: ContextTypes.DEFAULT_TYPE):
    role = update.message.text
    context.user_data['role'] = role

    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=ReplyKeyboardMarkup(
            [[KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    return GET_PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.contact:
        phone = update.message.contact.phone_number
    else:
        phone = update.message.text

    save_to_file(context.user_data, phone)

    menu = seller_menu if context.user_data['role'] == "üëî –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º" else driver_menu
    role_name = "–º–µ–Ω–µ–¥–∂–µ—Ä" if context.user_data['role'] == "üëî –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º" else "–≤–æ–¥–∏—Ç–µ–ª—å"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –æ–±—É—á–∞—é—â—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∫–æ–º–ø–∞–Ω–∏–∏ inTrips, {role_name}!",
        reply_markup=menu
    )

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
    asyncio.create_task(send_auto_messages(update, context))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    asyncio.create_task(send_registration_message(update, context))

    return ConversationHandler.END

async def send_registration_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await asyncio.sleep(120)  # 2 –º–∏–Ω—É—Ç—ã = 120 —Å–µ–∫—É–Ω–¥
    try:
        await update.message.reply_text(
            "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–æ–¥–∞–≤—Ü–∞: "
            "https://intrips.online –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –Ω–∞ –∞–¥—Ä–µ—Å "
            "@intrips_go —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –§.–ò.–û., –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –≥–æ–¥–∞ —Ä–æ–∂–¥–µ–Ω–∏—è",
            parse_mode=ParseMode.HTML,
            disable_web_page_preview=True
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def send_auto_messages(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await asyncio.sleep(3)
    role = context.user_data['role']
    texts = SELLER_TEXT if role == "üëî –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º" else DRIVER_TEXT

    for text in texts:
        try:
            await update.message.reply_text(
                text=text,
                parse_mode=ParseMode.HTML,
                disable_web_page_preview=True
            )
            await asyncio.sleep(1)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user_id = update.effective_user.id
    role = context.user_data.get('role', '')

    try:
        if "üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" in text:
            await send_instruction(update, role)
        elif "üé• –í–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" in text:
            await send_video(update, role)
        elif "üìÑ PDF" in text:
            await send_pdf(update, role)
        elif "üéß –ê—É–¥–∏–æ" in text:
            await send_audio(update, role)
        elif "‚úÖ –ß–µ–∫-–ª–∏—Å—Ç" in text:
            await send_checklist(update, role)
        elif "üìÑ –¢–∞—Ä–∏—Ñ—ã" in text:
            await send_tariffs(update)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {str(e)}")

async def send_instruction(update: Update, role: str):
    file_type = "seller" if "–ú–µ–Ω–µ–¥–∂–µ—Ä" in role else "driver"
    with open(f"media/{file_type}_instruction.pdf", "rb") as f:
        await update.message.reply_document(f)

async def send_video(update: Update, role: str):
    file_type = "seller" if "–ú–µ–Ω–µ–¥–∂–µ—Ä" in role else "driver"
    with open(f"media/{file_type}_video.mp4", "rb") as f:
        await update.message.reply_video(f)

async def send_pdf(update: Update, role: str):
    file_type = "seller" if "–ú–µ–Ω–µ–¥–∂–µ—Ä" in role else "driver"
    with open(f"media/{file_type}_manual.pdf", "rb") as f:
        await update.message.reply_document(f)

async def send_audio(update: Update, role: str):
    file_type = "seller" if "–ú–µ–Ω–µ–¥–∂–µ—Ä" in role else "driver"
    with open(f"media/{file_type}_audio.mp3", "rb") as f:
        await update.message.reply_audio(f)

async def send_checklist(update: Update, role: str):
    file_type = "seller" if "–ú–µ–Ω–µ–¥–∂–µ—Ä" in role else "driver"
    with open(f"media/{file_type}_checklist.pdf", "rb") as f:
        await update.message.reply_document(f)

async def send_tariffs(update: Update):
    with open("media/tariffs.pdf", "rb") as f:
        await update.message.reply_document(f)

if __name__ == "__main__":
    application = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            CHOOSING_ROLE: [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_role)],
            GET_PHONE: [
                MessageHandler(filters.CONTACT | filters.TEXT, get_phone)
            ]
        },
        fallbacks=[]
    )

    application.add_handler(conv_handler)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()